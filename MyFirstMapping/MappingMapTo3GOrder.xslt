<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Altova MapForce 2019r3

YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.

Refer to the Altova MapForce Documentation for further details.
http://www.altova.com/mapforce
-->
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" exclude-result-prefixes="xs fn">
	<xsl:output method="xml" encoding="UTF-8" byte-order-mark="no" indent="yes"/>
	<xsl:template match="/">
		<xsl:variable name="var3_OrderInput" as="node()?" select="OrderInput"/>
		<ThreeGOrder>
			<xsl:attribute name="xsi:noNamespaceSchemaLocation" namespace="http://www.w3.org/2001/XMLSchema-instance" select="'file:///C:/workspace/xmlxslt/MyFirstSchema/3GOrder.xsd'"/>
			<xsl:for-each select="$var3_OrderInput">
				<Description>
					<xsl:for-each select="(./Description/node())[fn:boolean(self::text())]">
						<xsl:sequence select="fn:string(.)"/>
					</xsl:for-each>
				</Description>
			</xsl:for-each>
			<Destination>
				<xsl:for-each select="$var3_OrderInput">
					<xsl:variable name="var2_Location" as="node()" select="Location"/>
					<xsl:for-each select="($var2_Location/Street/node())[fn:boolean(self::text())]">
						<xsl:variable name="var1_current" as="node()" select="."/>
						<xsl:for-each select="($var2_Location/Nr/node())[fn:boolean(self::text())]">
							<Address>
								<xsl:sequence select="fn:concat(fn:string($var1_current), fn:string(.))"/>
							</Address>
						</xsl:for-each>
					</xsl:for-each>
				</xsl:for-each>
				<xsl:for-each select="$var3_OrderInput">
					<City>
						<xsl:for-each select="(./Location/Country/node())[fn:boolean(self::text())]">
							<xsl:sequence select="fn:string(.)"/>
						</xsl:for-each>
					</City>
				</xsl:for-each>
			</Destination>
		</ThreeGOrder>
	</xsl:template>
</xsl:stylesheet>
